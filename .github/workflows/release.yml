name: Publish package to GitHub Packages
on:
#  release:
#    types: [created]

# react on every push with tags
  push:
    tags:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  publish:
    name: Create release-artifacts
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
    steps:
      # setup JDK
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'

      # Setup babashka
      - name: Set up babashka
        uses: turtlequeue/setup-babashka@v1.3.0
        with:
          babashka-version: 0.4.4

      # install clojure tools deps, lein and boot
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@3.4
        with:
          # Install just one or all simultaneously
          cli: 1.10.3.855 # Clojure CLI based on tools.deps
          lein: 2.9.6     # or use 'latest' to always provision latest version of leiningen
          boot: 2.8.3     # or use 'latest' to always provision latest version of boot

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Run tests
      - name: Run tests
        run: bb test

      # Build distr
      - name: Build distr
        run: bb build

      # Publish binary Github releases
      - name: Upload binaries to release
#        uses: skx/github-action-publish-binaries@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          args: 'target/gantt*.jar'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/gantt*.jar
          asset_name: gantt
          tag: ${{ github.ref }}
          overwrite: true
          body: "This is new Gantt release."

      # Publish package as jar file to maven repo on Github
#      - name: Publish package
#        run: mvn --batch-mode deploy
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
